*,
*::before,
*::after{
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box; 
}
li {
    list-style: none;
    
}
a,
a::visited{
    text-decoration: none;
}
a::hover{
    text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6{
    font-weight: inherit;
    font-size: inherit;
}
img{
    vertical-align: top;
}
html{
    font-size: 16px;
}
body{
    line-height: 1;
}
/* Отступы */
/* Внутренние

Padding - внутренний отступ. при указании отступа поля в %, высчитывается от ширины контента. Свойство не наследуется
--------------------------------
padding-top
padding-right
padding-bottom
padding-left
--------------------------------
padding: верх право низ лево;
padding: верх право-лево низ;
padding: верх-низ право-лево;*/

/* Внешние 

margin - внешний оступ. при указании отступа поля в %, считается от ширины родителя элемента. Свойство не наследуется. Значение может указываться в отрицательном значении.
--------------------------------
margim-top
margim-right
margim-bottom
margim-left
--------------------------------
margim: верх право низ лево;
margim: верх право-лево низ;
margim: верх-низ право-лево; */

/* ширина 
width - устанавливает ширину блочных тегов и блочно-чтрочных.
Свойство не наследуется */
/* Высота
 height - устанавливает высоту блочных и блочно-строчных элементов.
 свойство не наследуется.*/

/* Ограничечния 
max-widht - устанавливает максимальную ширину блочных и блочнно-строчных элементов.
min-width - устанавливает минимальную ширину блочных и блочно-строчных элементов.
max-height - устанавливает максимальную высоту блочных и блочнно-строчных элементов.
min-height - устанавливает минимальную высоту блочных и блочно-строчных элементов.*/

/* box-sizing
применяется для измененния алгоритма расчета ширины и высоты лемента.
Свойство наследуется.
content-box - основывается на стандартах css, при этом свойства width и height включают в себя значения полей и границ, но не отступов(margin)/ 
padding-box - свойтсво width и height включают в себбя значения полей, но не отступов (margin) и границ (border)/  */

/* Центрировние объекта
1. блочный объект
2. ограничение ширины - уже родителя
3. margin: 0px auto; 
(ориентирование в правую сторону
margin: 0 0 0 auto;)*/

/* overflow
управляет отображением содержания блочного элемента
visible - отображается все содержание элемента, даже запределами установленной высоты и ширины.
hidden - отображается только область внутри элемента, остальное будет скрыто
scroll - всегда добавляется полосы прокрутки
auto- полосы прокрутки добавляются только при необходимости */

/* display
многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. НЕ НАСЛЕДУЕТСЯ
block - элемент показывается как блочный, применение этого значения для встроенных элементов, например тега <span>, заставляет его вести подобно блокам - происходит перенос строк в начале и в конце содержимого.
inline - элемент отображается как встроенный. Использование блочных тегов, таких как <div> и <p>, автоматически создает перенос и показывает содержимое этих тегов с новой строки. Значение inline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где оканчился предыдущий элемент.
inline-block - это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно встроенному элементу. Фактически такой элемент по своему действию похож на встраиваемые элементы (вроде тега <img>). При этом его внутренняя часть форматируется как блочный элемент, а сам элемент - как встроенный.
none - временно удаляет элемент из документа. Занимаемое им местро не резервируется и веб-страница формируется так, словно элемента и не было. */